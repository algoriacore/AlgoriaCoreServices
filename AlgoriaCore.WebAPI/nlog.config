<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="info"
      internalLogFile="[appPath]\App_Data\internal-nlog.txt">

    <!-- enable asp.net core layout renderers -->
    <extensions>
        <add assembly="NLog.Web.AspNetCore"/>
        <add assembly="NLog.MailKit"/>
    </extensions>

    <variable name="logDirectory" value="${basedir}\App_Data\Logs" />

    <!-- the targets to write to -->
    <targets async="true" encoding="utf-8">

        <target name="logconsole" xsi:type="Console" />

        <!-- another file log, only own logs. Uses some ASP.NET core renderers -->
        <target xsi:type="File" name="ownFile-web" fileName="${var:logDirectory}\nlog-${shortdate}.txt"
                layout="${uppercase:${level}}|${longdate:universalTime=True}|${logger}|${message} ${exception:format=tostring}" />
        <target xsi:type="File"
            name="fileLog"
            fileName="${var:logDirectory}\${shortdate}Log.txt"
            keepFileOpen="true"
            concurrentWrites="true"
            layout="
        *************************** Level: |${uppercase:${level}} (${longdate}) *************************** ${newline}
        ${newline}
        TenantId: ${event-properties:item=TenantId}${newline}
        UserId: ${event-properties:item=UserId}${newline}
        ImpersonalizerUserId: ${event-properties:item=ImpersonalizerUserId}${newline}
        UserName: ${event-properties:item=UserName}${newline}
        ServiceName: ${event-properties:item=ServiceName}${newline}
        MethodName: ${event-properties:item=MethodName}${newline}
        Parameters: ${event-properties:item=Parameters}${newline}
        ExecutionDatetime: ${event-properties:item=ExecutionDatetime}${newline}
        ExecutionDuration: ${event-properties:item=ExecutionDuration}${newline}
        ClientIpAddress: ${event-properties:item=ClientIpAddress}${newline}
        BroserInfo: ${event-properties:item=BroserInfo}${newline}
        Exception: ${event-properties:item=Exception}${newline}
        Severity: ${event-properties:item=Severity}${newline}
        ${newline}
        Exception: ${exception:tostring}${newline}
        ${newline}
        Action: ${aspnet-mvc-action}${newline}
        ControllerName: ${aspnet-mvc-controller}${newline}
        RequestHost: ${aspnet-request-host}${newline}
        RequestIp: ${aspnet-request-ip}${newline}
        Item: ${aspnet-item}${newline}
        ${newline}
        Message: ${message}${newline}
        Properties: ${all-event-properties:separator=|}${newline}
        Call Site: ${callsite}${newline}
        Exception Type: ${exception:format=Type}${newline}
        Exception Message: ${exception:format=Message}${newline}
        Stack Trace: ${exception:format=StackTrace}${newline}
        Event Id: ${event-properties:item=EventId_Id}${newline}
        Logger: ${logger}${newline}" />

        <!--</target>-->

        <target xsi:type="File"
            name="fileJson"
            keepFileOpen="true"
            concurrentWrites="true"
            fileName="${var:logDirectory}Json.json">
            <layout type="JsonLayout">
                <attribute name="properties"        layout="${all-event-properties}" encode="true" />
                <attribute name="Site"              layout="${callsite}" />
                <attribute name="ExceptionType"     layout="${exception:format=Type}" />
                <attribute name="ExceptionMessage"  layout="${exception:format=Message}" />
                <attribute name="StackTrace"        layout="${exception:format=StackTrace}" />
                <attribute name="EventId"           layout="${event-properties:item=EventId_Id}" />
                <attribute name="Logger"            layout="${logger}" />
            </layout>
        </target>

        <target name="db"
            xsi:type="Database"
            connectionString="Server=[server]; Database=[database]; User ID=[user];Password=[pass]; Trusted_Connection=False;"
            commandType="StoredProcedure"
            commandText="NLog_AddEntry_p">
                <parameter name="@machineName"    layout="${machinename}" />
                <parameter name="@logged"         layout="${date}" />
                <parameter name="@level"          layout="${level}" />
                <parameter name="@message"        layout="${message}" />
                <parameter name="@logger"         layout="${logger}" />
                <parameter name="@properties"     layout="${all-event-properties:separator=|}" />
                <parameter name="@callsite"       layout="${callsite}" />
                <parameter name="@exception"      layout="${exception:tostring}" />
        </target>

        <target name="dbAuditLog"
            xsi:type="Database"
            connectionString="Server=[server]; Database=[database]; User ID=[user];Password=[pass]; Trusted_Connection=False;"
            commandType="StoredProcedure"
            commandText="AuditLog_AddEntry">
            <parameter name="@TenantId"    layout="${event-properties:item=TenantId}" />
            <parameter name="@UserId"    layout="${event-properties:item=UserId}" />
            <parameter name="@ImpersonalizerUserId"    layout="${event-properties:item=ImpersonalizerUserId}" />
            <parameter name="@ServiceName"    layout="${event-properties:item=ServiceName}" />
            <parameter name="@MethodName"    layout="${event-properties:item=MethodName}" />
            <parameter name="@Parameters"    layout="${event-properties:item=Parameters}" />
            <parameter name="@ExecutionDatetime"    layout="${event-properties:item=ExecutionDatetime}" />
            <parameter name="@ExecutionDuration"    layout="${event-properties:item=ExecutionDuration}" />
            <parameter name="@ClientIpAddress"    layout="${aspnet-request-ip:CheckForwardedForHeader=true}" />
            <parameter name="@ClientName"    layout="${machinename}" />
            <parameter name="@BroserInfo"    layout="${aspnet-request-useragent} " />
            <parameter name="@Exception"    layout="${event-properties:item=Exception}" />
            <parameter name="@CustomData"    layout="${event-properties:item=CustomData}" />
            <parameter name="@Severity"    layout="${event-properties:item=Severity}" />
        </target>

        <target name="dbAuditLogOther"
            xsi:type="Database"
            connectionString="Server=[server]; Database=[database]; User ID=[user];Password=[pass]; Trusted_Connection=False;"
            commandType="StoredProcedure"
            commandText="AuditLog_AddEntry_Other">
            <parameter name="@machineName"    layout="${machinename}" />
            <parameter name="@logged"         layout="${date:universalTime=True}" />
            <parameter name="@level"          layout="${uppercase:${level}}" />
            <parameter name="@message"        layout="${message}" />
            <parameter name="@logger"         layout="${logger}" />
            <parameter name="@properties"     layout="${all-event-properties:separator=|}" />
            <parameter name="@callsite"       layout="${callsite}" />
            <parameter name="@exception"      layout="${exception:tostring}" />
        </target>


        <target name="dbAuditLogMySql"
            xsi:type="Database"
            dbProvider="MySql.Data.MySqlClient.MySqlConnection,MySqlConnector"
            connectionString="server=[server];database=[database];port=[port];user id=[user];password=[pass];"
            commandType="StoredProcedure"
            commandText="AuditLog_AddEntry">
            <parameter name="@TenantId"    layout="${event-properties:item=TenantId}" />
            <parameter name="@UserId"    layout="${event-properties:item=UserId}" />
            <parameter name="@ImpersonalizerUserId"    layout="${event-properties:item=ImpersonalizerUserId}" />
            <parameter name="@ServiceName"    layout="${event-properties:item=ServiceName}" />
            <parameter name="@MethodName"    layout="${event-properties:item=MethodName}" />
            <parameter name="@Parameters"    layout="${event-properties:item=Parameters}" />
            <parameter name="@ExecutionDatetime"    layout="${event-properties:item=ExecutionDatetime}" />
            <parameter name="@ExecutionDuration"    layout="${event-properties:item=ExecutionDuration}" />
            <parameter name="@ClientIpAddress"    layout="${aspnet-request-ip:CheckForwardedForHeader=true}" />
            <parameter name="@ClientName"    layout="${machinename}" />
            <parameter name="@BroserInfo"    layout="${aspnet-request-useragent} " />
            <parameter name="@Exception"    layout="${event-properties:item=Exception}" />
            <parameter name="@CustomData"    layout="${event-properties:item=CustomData}" />
            <parameter name="@Severity"    layout="${event-properties:item=Severity}" />
        </target>

        <target name="dbAuditLogOtherMySql"
            xsi:type="Database"
            dbProvider="MySql.Data.MySqlClient.MySqlConnection,MySqlConnector"
            connectionString="server=[server];database=[database];port=[port];user id=[user];password=[pass];"
            commandType="StoredProcedure"
            commandText="AuditLog_AddEntry_Other">
            <parameter name="@machineName"    layout="${machinename}" />
            <parameter name="@logged"         layout="${date:universalTime=True}" />
            <parameter name="@level"          layout="${uppercase:${level}}" />
            <parameter name="@message"        layout="${message}" />
            <parameter name="@logger"         layout="${logger}" />
            <parameter name="@properties"     layout="${all-event-properties:separator=|}" />
            <parameter name="@callsite"       layout="${callsite}" />
            <parameter name="@exception"      layout="${exception:tostring}" />
        </target>
        
        
        <target xsi:type="Mail"
            name="mailserver"
            subject="Mensaje desde NLog"
            to="[emailAddress]"
            from="[emailAddress]"
            smtpServer="[emailServer]"
            smtpPort="[emailPort]"
            smtpUserName="[emailUserName]"
            smtpPassword="[emailPass]"
            smtpAuthentication="Basic"        
            skipCertificateValidation="true"
            html="false"
            body="*************************** Level: ${level} (${longdate}) *************************** ${newline}
                ${newline}
                Call Site: ${callsite}${newline}
                Exception Type: ${exception:format=Type}${newline}
                Exception Message: ${exception:format=Message}${newline}
                Stack Trace: ${exception:format=StackTrace}${newline}
                Event Id: ${event-properties:item=EventId_Id}${newline}
                Logger: ${logger}${newline}"/>

        <target xsi:type="Mail"
            name="mailserver2"
            subject="Mensaje desde NLog"
            to="${event-properties:item=EmailTo}"
            from="[emailAddress]"
            smtpServer="[emailServer]"
            smtpPort="[emailPort]"
            smtpUserName="[emailUser]"
            smtpPassword="[emailPass]"
            smtpAuthentication="Basic"
            skipCertificateValidation="true"
            html="false"
            body="${event-properties:item=EmailBody}"/>

        <target xsi:type="Mail"
            name="mailserver3"
            subject="${event-properties:item=EmailSubject}"
            to="${event-properties:item=EmailTo}"
            from="${event-properties:item=EmailFrom}"
            smtpServer="${event-properties:item=EmailSmtpServer}"
            smtpPort="[emailPort]"
            smtpUserName="${event-properties:item=EmailSmtpUserName}"
            smtpPassword="${event-properties:item=EmailSmtpPassword}"
            smtpAuthentication="Basic"
            skipCertificateValidation="true"
            html="false"
            body="${event-properties:item=EmailBody}"/>

    </targets>

    <rules>

        <logger name="*" minlevel="Info" writeTo="logconsole" />
        
        <!--All logs, including from Microsoft-->
        <!--<logger name="AlgoriaCore.WebUI.Filters.*" minlevel="Trace" writeTo="fileLog" />-->
        <logger name="*" minlevel="Warn" writeTo="fileLog" enabled="false" />
        <logger name="*" minlevel="Warn" writeTo="fileJson" enabled="false" />
        <logger name="*" minlevel="Warn" writeTo="db" enabled="false" />
        <logger name="*" minlevel="Warn" writeTo="mailserver" enabled="false" />

        <logger name="*" minlevel="Fatal" writeTo="mailserver2" />
        
        <!--Skip non-critical Microsoft logs and so log only own logs-->
        <logger name="Microsoft.*" minlevel="Info" writeTo="ownFile-web" /> <!-- BlackHole without writeTo -->
        <logger name="*" minlevel="Trace" writeTo="ownFile-web" enabled="true" />

        <logger name="Microsoft.*" minlevel="Warn" writeTo="dbAuditLogOther" />
        <logger name="AlgoriaInfrastructure.*" minlevel="Trace" writeTo="dbAuditLog" />
        <logger name="Microsoft.*" minlevel="Warn" writeTo="dbAuditLogOtherMySql" enabled="false" />
        <logger name="AlgoriaInfrastructure.*" minlevel="Trace" writeTo="dbAuditLogMySql" enabled="false" />

    </rules>
</nlog>